
/*
The user provided config file can provide settings in addition to the the settings in the nextflow.config file.
Here's some examples on how you can write your own config file.
Command example with config file:
nextflow run main.nf -c usr_template.config
*/

/*
You can set the pipeline parameters within the config file instead of providing them on the command line like this:
*/
params {
	project = "/crex/proj/fume/nobackup/private/jay/test_pipeline/Loclat_20240105"
	samples = "/crex/proj/fume/nobackup/private/jay/squeezmeta/Loclat/Loclat.samples"
	fastq = "/crex/proj/fume/nobackup/private/jay/squeezmeta/Loclat/raw"
	threads = 12
	taxSort = "class"
	mean_cov_threshold = 20
        nr_samps_threshold = 5
	min_med_cov = 20
}

executor.queueSize = 100
workDir = "/crex/proj/fume/nobackup/private/jay/test_pipeline/scratch"

process {
	//These settings will apply to a majority of the processes
	executor = 'slurm'
	clusterOptions = { '-A naiss2023-5-97' }
	cpus = params.threads
	queue = 'core' //This is the partition directive. Set it to core or node to match your requested cpus.
	time = '4h 15m'

    //Some of the processes are small enough that they can be run locally. That can be set like this:
    withLabel: short_time {
        executor = 'local'
        cpus = 1
    }

    /*  The medium time processes require some computation, but not as much time as the standard processes.
	You can set different cluster options for them like this: 
    */
    withLabel: medium_time {
	executor = 'slurm'
	clusterOptions = { '-A naiss2023-5-97' }
	cpus = { params.threads/2 }
	queue = 'core'
	time = '1h 30m'
    }
}
